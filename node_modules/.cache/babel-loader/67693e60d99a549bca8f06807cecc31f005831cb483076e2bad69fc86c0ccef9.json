{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\ProjetGloboApp\\\\projet_gobloapp\\\\src\\\\Pages\\\\PopupEnroler.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../Styles/Popup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PopupEnroler({\n  Nomprenom,\n  onClose\n}) {\n  _s();\n  const [randomNumbers, setRandomNumbers] = useState('');\n  useEffect(() => {\n    // Génère quatre chiffres aléatoires\n    const generateRandomNumbers = () => {\n      const randomNumber = Math.floor(10000000 + Math.random() * 90000000);\n      setRandomNumbers(randomNumber.toString().split('').join(' '));\n    };\n    generateRandomNumbers();\n  }, []); // Le tableau vide [] fait en sorte que cela s'exécute une seule fois lors du montage initial\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn\",\n        onClick: onClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enregistrement r\\xE9ussi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: Nomprenom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 12\n        }, this), \" a le matricule N\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: randomNumbers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(PopupEnroler, \"vqaKbL/BUWU4Ztt+dMhDirmvGW8=\");\n_c = PopupEnroler;\nexport default PopupEnroler;\nvar _c;\n$RefreshReg$(_c, \"PopupEnroler\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PopupEnroler","Nomprenom","onClose","_s","randomNumbers","setRandomNumbers","generateRandomNumbers","randomNumber","Math","floor","random","toString","split","join","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/ProjetGloboApp/projet_gobloapp/src/Pages/PopupEnroler.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../Styles/Popup.css';\r\n\r\nfunction PopupEnroler({ Nomprenom, onClose }) {\r\n  const [randomNumbers, setRandomNumbers] = useState('');\r\n  \r\n  useEffect(() => {\r\n    // Génère quatre chiffres aléatoires\r\n    const generateRandomNumbers = () => {\r\n      const randomNumber = Math.floor(10000000 + Math.random() * 90000000);\r\n      setRandomNumbers(randomNumber.toString().split('').join(' '));\r\n    };\r\n\r\n    generateRandomNumbers();\r\n  }, []); // Le tableau vide [] fait en sorte que cela s'exécute une seule fois lors du montage initial\r\n\r\n  return (\r\n    <div className=\"popup-overlay\">\r\n      <div className=\"popup-content\">\r\n        <button className=\"close-btn\" onClick={onClose}>X</button>\r\n        <h2>Enregistrement réussi</h2>\r\n        <p><span>{Nomprenom}</span> a le matricule N°</p>\r\n        <h1>{randomNumbers}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupEnroler;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,YAAYA,CAAC;EAAEC,SAAS;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,qBAAqB,GAAGA,CAAA,KAAM;MAClC,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAAC,QAAQ,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC;MACpEL,gBAAgB,CAACE,YAAY,CAACI,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/D,CAAC;IAEDP,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEP,OAAA;IAAKe,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BhB,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BhB,OAAA;QAAQe,SAAS,EAAC,WAAW;QAACE,OAAO,EAAEd,OAAQ;QAAAa,QAAA,EAAC;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1DrB,OAAA;QAAAgB,QAAA,EAAI;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BrB,OAAA;QAAAgB,QAAA,gBAAGhB,OAAA;UAAAgB,QAAA,EAAOd;QAAS;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,yBAAkB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACjDrB,OAAA;QAAAgB,QAAA,EAAKX;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CAvBQH,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAyBrB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}